# Netlify Configuration for Geneva Guide Travel App
[build]
  publish = "public"
  functions = "netlify/functions"
  command = "echo 'No build needed for static site'"
  base = "."

# API Routes - Proxy requests to serverless functions
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Enhanced Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    # Prevent clickjacking attacks
    X-Frame-Options = "DENY"
    # Prevent MIME type sniffing
    X-Content-Type-Options = "nosniff"
    # Enable XSS protection
    X-XSS-Protection = "1; mode=block"
    # Control referrer information
    Referrer-Policy = "strict-origin-when-cross-origin"
    # Enhanced Content Security Policy with CORS fixes
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://unpkg.com https://www.gstatic.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://unpkg.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https: blob: https://lh3.googleusercontent.com https://bubblesclub.ch https://*.tile.openstreetmap.org https://raw.githubusercontent.com https://cdnjs.cloudflare.com; connect-src 'self' https://api.open-meteo.com https://firestore.googleapis.com https://identitytoolkit.googleapis.com https://securetoken.googleapis.com https://generativelanguage.googleapis.com https://*.tile.openstreetmap.org; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;"
    # Restrict browser features
    Permissions-Policy = "accelerometer=(), camera=(), geolocation=(self), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=(), fullscreen=(self)"
    # Additional security headers
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Cross-Origin-Embedder-Policy = "unsafe-none"
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Resource-Policy = "cross-origin"

# HTML files - short cache with revalidation
[[headers]]
  for = "/*.html"
  [headers.values]
    Content-Type = "text/html; charset=utf-8"
    Cache-Control = "public, max-age=3600, must-revalidate"
    ETag = "true"

# CSS files - correct MIME type
[[headers]]
  for = "/css/*"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"
    ETag = "true"
    Vary = "Accept-Encoding"

# JavaScript files - correct MIME type
[[headers]]
  for = "/js/*"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"
    ETag = "true"
    Vary = "Accept-Encoding"

# SVG files
[[headers]]
  for = "/favicon.svg"
  [headers.values]
    Content-Type = "image/svg+xml"
    Cache-Control = "public, max-age=31536000, immutable"
    ETag = "true"

# JSON files
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Content-Type = "application/json; charset=utf-8"
    Cache-Control = "public, max-age=86400, must-revalidate"
    ETag = "true"

# API responses - no cache
[[headers]]
  for = "/api/*"
  [headers.values]
    Content-Type = "application/json; charset=utf-8"
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"